<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syc.oa.mapper.TbEmployeeMapper">
  <resultMap id="BaseResultMap" type="com.syc.oa.domain.TbEmployee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="cardId" jdbcType="VARCHAR" property="cardId" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="party" jdbcType="VARCHAR" property="party" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="qqNum" jdbcType="VARCHAR" property="qqNum" />
    <result column="race" jdbcType="VARCHAR" property="race" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="speciality" jdbcType="VARCHAR" property="speciality" />
    <result column="did" jdbcType="INTEGER" property="did" />
    <result column="jid" jdbcType="INTEGER" property="jid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, address, birthday, cardId, createDate, education, email, gender, hobby, name, 
    party, phone, qqNum, race, remark, speciality, did, jid, uid
  </sql>
  <select id="selectByExample" parameterType="com.syc.oa.domain.TbEmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.syc.oa.domain.TbEmployeeExample">
    delete from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.syc.oa.domain.TbEmployee">
    insert into tb_employee (id, address, birthday, 
      cardId, createDate, education, 
      email, gender, hobby, 
      name, party, phone, 
      qqNum, race, remark, 
      speciality, did, jid, 
      uid)
    values (#{id,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{cardId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{education,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{hobby,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{party,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{qqNum,jdbcType=VARCHAR}, #{race,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{speciality,jdbcType=VARCHAR}, #{did,jdbcType=INTEGER}, #{jid,jdbcType=INTEGER}, 
      #{uid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.syc.oa.domain.TbEmployee">
    insert into tb_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="cardId != null">
        cardId,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="party != null">
        party,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="qqNum != null">
        qqNum,
      </if>
      <if test="race != null">
        race,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="speciality != null">
        speciality,
      </if>
      <if test="did != null">
        did,
      </if>
      <if test="jid != null">
        jid,
      </if>
      <if test="uid != null">
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="party != null">
        #{party,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qqNum != null">
        #{qqNum,jdbcType=VARCHAR},
      </if>
      <if test="race != null">
        #{race,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        #{speciality,jdbcType=VARCHAR},
      </if>
      <if test="did != null">
        #{did,jdbcType=INTEGER},
      </if>
      <if test="jid != null">
        #{jid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.syc.oa.domain.TbEmployeeExample" resultType="java.lang.Long">
    select count(*) from tb_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_employee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cardId != null">
        cardId = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        createDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.hobby != null">
        hobby = #{record.hobby,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.party != null">
        party = #{record.party,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.qqNum != null">
        qqNum = #{record.qqNum,jdbcType=VARCHAR},
      </if>
      <if test="record.race != null">
        race = #{record.race,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.speciality != null">
        speciality = #{record.speciality,jdbcType=VARCHAR},
      </if>
      <if test="record.did != null">
        did = #{record.did,jdbcType=INTEGER},
      </if>
      <if test="record.jid != null">
        jid = #{record.jid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_employee
    set id = #{record.id,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      cardId = #{record.cardId,jdbcType=VARCHAR},
      createDate = #{record.createDate,jdbcType=TIMESTAMP},
      education = #{record.education,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      hobby = #{record.hobby,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      party = #{record.party,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      qqNum = #{record.qqNum,jdbcType=VARCHAR},
      race = #{record.race,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      speciality = #{record.speciality,jdbcType=VARCHAR},
      did = #{record.did,jdbcType=INTEGER},
      jid = #{record.jid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.syc.oa.domain.TbEmployee">
    update tb_employee
    <set>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="cardId != null">
        cardId = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="hobby != null">
        hobby = #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="party != null">
        party = #{party,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qqNum != null">
        qqNum = #{qqNum,jdbcType=VARCHAR},
      </if>
      <if test="race != null">
        race = #{race,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        speciality = #{speciality,jdbcType=VARCHAR},
      </if>
      <if test="did != null">
        did = #{did,jdbcType=INTEGER},
      </if>
      <if test="jid != null">
        jid = #{jid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.syc.oa.domain.TbEmployee">
    update tb_employee
    set address = #{address,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      cardId = #{cardId,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      education = #{education,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      hobby = #{hobby,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      party = #{party,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      qqNum = #{qqNum,jdbcType=VARCHAR},
      race = #{race,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      speciality = #{speciality,jdbcType=VARCHAR},
      did = #{did,jdbcType=INTEGER},
      jid = #{jid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>