package Offer41;

import java.util.ArrayList;

/**
 * Title:和为S的连续正数序列 (双指针法，small 和 big) Description:
 * 小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。
 * 但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。
 * 没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。 现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good
 * Luck!
 * 
 * 输出描述: 输出所有和为S的连续正数序列。序列内按照从小至大的顺序，序列间按照开始数字从小到大的顺序
 * 
 * @author rico
 * @created 2017年6月28日 下午8:18:42
 */
public class Solution {
	public ArrayList<ArrayList<Integer>> FindContinuousSequence(int sum) {
		ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
		if (sum < 3) {
			return result;
		} else {
			int small = 1;
			int big = 2;
			int mid = (1 + sum) / 2;
			int cursum = small + big;
			while (small < mid) { // 循环终止条件
				if (cursum == sum) {
					ArrayList<Integer> list = generateList(small, big);
					result.add(list);
				}

				// cursum > sum 时, small 自增;
				while (cursum > sum && small < mid) {
					cursum -= small;
					small++;
					if (cursum == sum) {
						ArrayList<Integer> list = generateList(small, big);
						result.add(list);
					}
				}

				// cursum < sum 时, big 自增
				big++;
				cursum += big;
			}
			return result;
		}
	}

	public ArrayList<Integer> generateList(int small, int big) {
		ArrayList<Integer> list = new ArrayList<Integer>();
		for (int i = small; i <= big; i++) {
			list.add(i);
		}
		return list;
	}

	public static void main(String[] args) {
		Solution s = new Solution();
		int sum = 9;
		System.out.println(s.FindContinuousSequence(sum));
	}
}
